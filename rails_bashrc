# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias c='clear'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# Git tab completion
# source /home/gezope/.git-completion.bash
# Show branch in status line
PS1='[\W$(__git_ps1 " (%s)")]\$ '
export PROMPT_COMMAND='echo -ne "\033]0;${PWD/#$HOME/~}\007"'

# git aliases
alias g='git'
alias ad='git add . && git status'
alias sb='git show-branch'
alias st='git status'
alias br='git branch -a'
alias co='git checkout'
alias cam='git commit -am'
alias rt='git remote'
alias diff='git diff --color'
alias gp='git push heroku master && heroku open'
export EDITOR="gvim"

# JAVA variables
export JAVA_HOME=/usr/lib/jvm/java-6-sun
export PATH=$PATH:$JAVA_HOME/bin

# CoffeeScript need Node PATH
export NODE_PATH=/usr/local/lib/node_modules
export PATH=$HOME/local/bin:$PATH
export PATH=$HOME/local/node/bin:$PATH
# export NODE_PATH=$HOME/local/node:$HOME/local/node/lib/node_modules

# This loads RVM into a shell session.
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" 


# alias for checking Rails
alias r='rails'
alias rs='rails server'
alias rst='rails server thin'
alias rc='rails console'
alias rcs='rails console --sandbox'
alias rkm='rake db:migrate'
alias rew='rvm list ; rvm gemset list; ruby -v ; gem list rails ; rails -v'
alias bun='bundle install'
alias pryr='pry -r ./config/environment'

alias rdef='rvm gemset use rails31'
alias ror='rvm gemset use ror32'
alias refy='cd practice/refinery/'
alias ref='rvm gemset use refinery'
alias sam='cd rails/railstutorial/sampleapp && rvm gemset use tutorial && git status'
alias eli='rvm gemset use elistaria ; cd rails/elistaria'

# alias for RefineryCMS
alias refeng="refinery_engine"
alias refcms="refinerycms"

#alias for Bitnami WP stack
alias wp="cd php/wp && ./ctlscript.sh"
alias wpstart="cd php/wp && ./ctlscript.sh start"
alias wpstop="cd php/wp && ./ctlscript.sh stop"
alias wprestart="cd php/wp && ./ctlscript.sh restart"
alias wpth="cd php/wp/apps/wordpress/htdocs/wp-content/themes/"

#alias for PHPFog cloud-based WP app
alias wpphpfog="cd /home/gezope/php/yogizoli.phpfogapp.com && git status"

#alias for Railstutorial
alias railstut="cd /home/gezope/sites/herokuapps/awesomepassion && rvm list && rvm gemset list&& gem list rails && git status"
alias beg='bundle exec guard'
alias be='bundle exec'

#alias for Bitnami Drupal stack
alias drstart="cd php/drupal && ./ctlscript.sh start"
alias drstop="cd php/drupal && ./ctlscript.sh stop"
alias drrestart="cd php/drupal && ./ctlscript.sh restart"
alias drth="cd php/drupal/apps/drupal/htdocs/themes/"
# check this permission issue later
# sudo chmod 755 -R  php/drupal/apps/drupal/htdocs/themes
# sudo chmod 755 -R  php/drupal/apps/drupal/htdocs/
export PATH=$HOME/local/bin:$PATH
export PATH=$HOME/local/bin:$PATH

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
